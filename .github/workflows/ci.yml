name: CI
on: [ push, pull_request ]
jobs:
  lints:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: cachix/install-nix-action@v12
        with:
          install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-3.0pre20201007_5257a25/install
          extra_nix_config: "experimental-features = nix-command flakes"
      - name: lints
        run: |
          nix develop -c pre-commit run --show-diff-on-failure --color=always || exit 1

  get-hosts:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-hosts.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: cachix/install-nix-action@v12
        with:
          install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-3.0pre20201007_5257a25/install
          extra_nix_config: "experimental-features = nix-command flakes"
      - id: get-hosts
        run: |
          nix build .#get-hosts -o ./hosts.json
          echo "::set-output name=matrix::$(cat ./hosts.json)"

  build-host:
    runs-on: ubuntu-latest
    needs: get-hosts
    strategy:
      matrix: ${{ fromJson(needs.get-hosts.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: cachix/install-nix-action@v12
        with:
          install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-3.0pre20201007_5257a25/install
          extra_nix_config: "experimental-features = nix-command flakes"
      - name: AArch64
        env:
          AARCH64_BOX_KEY: ${{ secrets.AARCH64_BOX_KEY }}
          KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
        run: |
          sudo mkdir -p /root/.ssh
          echo "$AARCH64_BOX_KEY" | sudo tee /root/.ssh/aarch64.community.nixos > /dev/null
          sudo chmod 0600 /root/.ssh/aarch64.community.nixos
          echo "$KNOWN_HOSTS" | sudo tee -a /root/.ssh/known_hosts > /dev/null
          builder_cfg=(
            lovesegfault@aarch64.nixos.community
            aarch64-linux
            /root/.ssh/aarch64.community.nixos
            64
            1
            big-parallel
          )
          echo "''${builder_cfg[*]}" | sudo tee /etc/nix/machines
      - uses: cachix/cachix-action@v8
        with:
          name: nix-config
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
      - name: nix-build
        run: |
          nix run nixpkgs#nix-build-uncached -- \
            -E "(builtins.getFlake (toString ./.)).deploy.nodes.${{ matrix.hosts }}.profiles.system.path"

  check-flake:
    runs-on: ubuntu-latest
    needs: build-host
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: cachix/install-nix-action@v12
        with:
          install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-3.0pre20201007_5257a25/install
          extra_nix_config: "experimental-features = nix-command flakes"
      - name: AArch64
        env:
          AARCH64_BOX_KEY: ${{ secrets.AARCH64_BOX_KEY }}
          KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
        run: |
          sudo mkdir -p /root/.ssh
          echo "$AARCH64_BOX_KEY" | sudo tee /root/.ssh/aarch64.community.nixos > /dev/null
          sudo chmod 0600 /root/.ssh/aarch64.community.nixos
          echo "$KNOWN_HOSTS" | sudo tee -a /root/.ssh/known_hosts > /dev/null
          builder_cfg=(
            lovesegfault@aarch64.nixos.community
            aarch64-linux
            /root/.ssh/aarch64.community.nixos
            64
            1
            big-parallel
          )
          echo "''${builder_cfg[*]}" | sudo tee /etc/nix/machines
      - uses: cachix/cachix-action@v8
        with:
          name: nix-config
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - name: check-flake
        run: "nix flake check"
